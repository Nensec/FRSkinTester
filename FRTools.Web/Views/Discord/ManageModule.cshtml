@model FRTools.Common.DiscordModuleViewModel

@{
    ViewBag.Title = "ManageModule";
    Layout = V2Layout;
}

<div class="card mt-3">
    <div class="card-header">
        <div class="row">
            <div class="col-5">
                <h5>Manage module: <b>@(Model.SelectedModule.Name)</b></h5>
            </div>
            <div class="col-7">
                <span class="pull-right"><a class="btn btn-sm btn-outline-secondary" href="@Url.RouteUrl("DiscordManageServer", new { discordServer = Model.ParentServer.ServerId })">Back to server management</a></span>
            </div>
        </div>
    </div>
    <div class="card-body">
        @if (!Model.Settings.Any())
        {
            <div>
                This module has no settings
            </div>
        }
        @foreach (var setting in Model.Settings.Where(x => x.Category == null))
        {
            <div class="form-group row">
                <label class="col-sm-3" style="text-align:left"><span class="glyphicon glyphicon-info-sign" data-toggle="tooltip" data-placement="left" title="@(setting.Description)"></span> @(setting.SettingName)</label>
                <div class="col-sm-9">
                    @Html.EditorFor(model => setting)
                </div>
            </div>
        }
    </div>
</div>
@foreach (var category in Model.Categories)
{
    <div class="card mt-3">
        <div class="card-header">
            @(category.Description)
        </div>
        <div class="card-body">
            @foreach (var setting in Model.Settings.Where(x => x.Category == category))
            {
                <div class="form-group row">
                    <label class="col-sm-3" style="text-align:left"><span class="glyphicon glyphicon-info-sign" data-toggle="tooltip" data-placement="left" title="@(setting.Description)"></span> @(setting.SettingName)</label>
                    <div class="col-sm-9">
                        @Html.EditorFor(model => setting)
                    </div>
                </div>
            }
        </div>
    </div>
}
@if (Model.Commands.Any(x => x.Settings.Any()))
{
    <div class="card mt-3">
        <div class="card-header">
            Command settings
        </div>
        <div class="card-body pt-0">
            @foreach (var command in Model.Commands.Where(x => x.Settings.Any()))
            {
                <div class="card mt-3">
                    <div class="card-header">
                        Settings for: @command.SelectedCommand.Name
                    </div>
                    <div class="card-body">
                        <div class="form-horizontal">
                            @foreach (var setting in command.Settings)
                            {
                                <div class="form-group row">
                                    <label class="col-sm-3" style="text-align:left"><span class="glyphicon glyphicon-info-sign" data-toggle="tooltip" data-placement="left" title="@(setting.Description)"></span> @(setting.SettingName)</label>
                                    <div class="col-sm-9">
                                        @Html.EditorFor(model => setting)
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
}
