@model BrowseViewModel

@{
    ViewBag.Title = "Browse";
    
}

<div class="card mt-3">
    <div class="card-header">
        <h5>Filter</h5>
    </div>
    <div class="card-body">
        @using (Html.BeginRouteForm("Browse", FormMethod.Get))
        {
            <div class="form-row">
                <div class="col form-group">
                    @Html.Label(nameof(Model.Filter.Name)) <span class="fa fa-info-circle" data-toggle="tooltip" title="Entered text will be searched as part of the 'Title' only!"></span>
                    @Html.TextBox(nameof(Model.Filter.Name), Model.Filter.Name, new { @class = "form-control", placeholder = "Enter name of skin.." })
                </div>
            </div>
            <div class="form-row">
                <div class="col-md-3 form-group">
                    @Html.Label(nameof(Model.Filter.DragonTypes)) <span class="fa fa-info-circle" data-toggle="tooltip" title="Hold CTRL to select multiple, or hold SHIFT to select range"></span>
                    <select size="8" id="@Html.Id(nameof(Model.Filter.DragonTypes))" name="@Html.Name(nameof(Model.Filter.DragonTypes))" multiple class="form-control">
                        <option disabled>- Modern -</option>
                        @foreach (var breed in GeneratedFRHelpers.GetModernBreeds())
                        {
                            <option value="@((int)breed)" @((Model.Filter.DragonTypes.Contains(breed) ? "selected" : ""))>@(breed.ToString())</option>
                        }
                        <option disabled>- Ancient -</option>
                        @foreach (var breed in GeneratedFRHelpers.GetAncientBreeds())
                        {
                            <option value="@((int)breed)" @((Model.Filter.DragonTypes.Contains(breed) ? "selected" : ""))>@(breed.ToString())</option>
                        }
                    </select>
                </div>
                <div class="col-md-3 form-group">
                    @Html.Label(nameof(Model.Filter.Genders)) <span class="fa fa-info-circle" data-toggle="tooltip" title="Hold CTRL to select multiple, or hold SHIFT to select range"></span>
                    <select size="2" id="@Html.Id(nameof(Model.Filter.Genders))" name="@Html.Name(nameof(Model.Filter.Genders))" multiple class="form-control">
                        @foreach (var gender in Enum.GetValues(typeof(Gender)).Cast<Gender>())
                        {
                            <option value="@((int)gender)" @((Model.Filter.Genders.Contains(gender) ? "selected" : ""))>@(gender.ToString())</option>
                        }
                    </select>
                </div>
                <div class="col-md-3 form-group">
                    @Html.Label(nameof(Model.Filter.SkinTypes)) <span class="fa fa-info-circle" data-toggle="tooltip" title="Hold CTRL to select multiple, or hold SHIFT to select range"></span>
                    <select size="2" id="@Html.Id(nameof(Model.Filter.SkinTypes))" name="@Html.Name(nameof(Model.Filter.SkinTypes))" multiple class="form-control">
                        @foreach (var skinType in Enum.GetValues(typeof(BrowseFilterModel.SkinType)).Cast<BrowseFilterModel.SkinType>())
                        {
                            <option value="@((int)skinType)" @((Model.Filter.SkinTypes.Contains(skinType) ? "selected" : ""))>@(skinType.ToString())</option>
                        }
                    </select>
                </div>
                <div class="col-md-3 form-group">
                    @Html.Label(nameof(Model.Pagination.PageSize))
                    @Html.DropDownList(nameof(Model.Pagination.PageSize), Model.Pagination.ValidPageSizes.Select(x => new SelectListItem { Selected = x == Model.Pagination.PageSize, Text = x.ToString() }), new { @class = "form-control" })
                </div>
            </div>
            <div class="d-flex justify-content-end">
                <input class="btn btn-primary" type="submit" value="Filter" />
            </div>
        }
    </div>
</div>

<div class="card mt-3">
    <div class="card-body">
        <div class="text-center">
            Total results: <b>@(Model.Pagination.TotalItems)</b>
        </div>
        <div class="d-flex flex-wrap">
            @foreach (var skin in Model.Results)
            {
                <a class="px-2 pb-2 col-xl-20 col-lg-3 col-md-4 col-6" href="@Url.RouteUrl("Preview", new { SkinId = skin.SkinId })">
                    <div class="text-center">@(skin.Title ?? "No title")</div>
                    <img class="img-fluid" src="@(skin.CDNBasePath + skin.PreviewUrl)" @((!string.IsNullOrEmpty(skin.Description) ? $"title=\"{skin.Description}\"" : "")) />
                </a>
            }
        </div>
        @Html.Partial("_Pagination", Model.Pagination)
    </div>
</div>

@section Scripts {
    <script>
        $('form').on('submit', function (e) {
            e.preventDefault()

            var formValues = $(this.elements).map(function () {
                var obj = $(this);
                if (obj.attr('type') == 'submit') {
                    return;
                }
                if (obj.attr('multiple')) {
                    return `${obj.attr('name')}=${obj.val().join(',')}`;
                }
                if (obj.val()) {
                    return `${obj.attr('name')}=${obj.val()}`;
                }
            }).get();

            window.location = $(this).attr('action') + '?' + formValues.join('&');
        })
    </script>
}

<style>
    @@media (min-width: 1200px) {
        .col-xl-20 {
            -ms-flex: 0 0 20%;
            flex: 0 0 20%;
            max-width: 20%;
        }
    }
</style>