@model BrowseViewModel

@{
    ViewBag.Title = "Browse";
}

<div class="panel panel-default">
    <div class="panel-heading">
        <h4>Filter</h4>
    </div>
    <div class="panel-body" style="padding-top:0">
        @using (Html.BeginRouteForm("Browse", FormMethod.Get))
        {
            <div class="form-horizontal">
                <div class="row" style="position:relative;">
                    <div class="col-md-12">
                        @Html.Label(nameof(Model.Filter.Name), new { @class = "control-label" }) <span class="glyphicon glyphicon-info-sign" data-toggle="tooltip" title="Entered text will be searched as part of the 'Title' only!"></span>
                        @Html.TextBox(nameof(Model.Filter.Name), Model.Filter.Name, new { @class = "form-control", placeholder = "Enter name of skin.." })
                    </div>
                    <div class="col-md-4">
                        @Html.Label(nameof(Model.Filter.DragonTypes), new { @class = "control-label" }) <span class="glyphicon glyphicon-info-sign" data-toggle="tooltip" title="Hold CTRL to select multiple, or hold SHIFT to select range"></span>
                        <select size="8" id="@Html.Id(nameof(Model.Filter.DragonTypes))" name="@Html.Name(nameof(Model.Filter.DragonTypes))" multiple class="form-control">
                            <option disabled>- Modern -</option>
                            @foreach (var breed in GeneratedFRHelpers.GetModernBreeds())
                            {
                                <option value="@((int)breed)" @((Model.Filter.DragonTypes.Contains(breed) ? "selected" : ""))>@(breed.ToString())</option>
                            }
                            <option disabled>- Ancient -</option>
                            @foreach (var breed in GeneratedFRHelpers.GetAncientBreeds())
                            {
                                <option value="@((int)breed)" @((Model.Filter.DragonTypes.Contains(breed) ? "selected" : ""))>@(breed.ToString())</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-4">
                        @Html.Label(nameof(Model.Filter.Genders), new { @class = "control-label" }) <span class="glyphicon glyphicon-info-sign" data-toggle="tooltip" title="Hold CTRL to select multiple, or hold SHIFT to select range"></span>
                        <select size="2" id="@Html.Id(nameof(Model.Filter.Genders))" name="@Html.Name(nameof(Model.Filter.Genders))" multiple class="form-control">
                            @foreach (var gender in Enum.GetValues(typeof(Gender)).Cast<Gender>())
                            {
                                <option value="@((int)gender)" @((Model.Filter.Genders.Contains(gender) ? "selected" : ""))>@(gender.ToString())</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-4">
                        @Html.Label(nameof(Model.Filter.SkinTypes), new { @class = "control-label" }) <span class="glyphicon glyphicon-info-sign" data-toggle="tooltip" title="Hold CTRL to select multiple, or hold SHIFT to select range"></span>
                        <select size="2" id="@Html.Id(nameof(Model.Filter.SkinTypes))" name="@Html.Name(nameof(Model.Filter.SkinTypes))" multiple class="form-control">
                            @foreach (var skinType in Enum.GetValues(typeof(BrowseFilterModel.SkinType)).Cast<BrowseFilterModel.SkinType>())
                            {
                                <option value="@((int)skinType)" @((Model.Filter.SkinTypes.Contains(skinType) ? "selected" : ""))>@(skinType.ToString())</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-4">
                        @Html.Label(nameof(Model.Pagination.PageSize), new { @class = "control-label" })
                        @Html.DropDownList(nameof(Model.Pagination.PageSize), Model.Pagination.ValidPageSizes.Select(x => new SelectListItem { Selected = x == Model.Pagination.PageSize, Text = x.ToString() }), new { @class = "form-control" })
                    </div>
                    <div style="position:absolute; right:15px; bottom:0;">
                        <input class="btn btn-primary" type="submit" value="Filter" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-body">
        <div class="text-center">
            Total results: <b>@(Model.Pagination.TotalItems)</b>
        </div>
        <div class="row">
            @foreach (var skin in Model.Results)
            {
                <a href="@Url.RouteUrl("Preview", new { SkinId = skin.SkinId })">
                    <div class="col-20-percent">
                        <h5 class="text-center" style="max-width:100%; max-height:15px;">@(skin.Title ?? "No title")</h5>
                        <div>
                            <img class="img-responsive" src="@(skin.CDNBasePath + skin.PreviewUrl)" @((!string.IsNullOrEmpty(skin.Description) ? $"title=\"{skin.Description}\"" : "")) />
                        </div>
                    </div>
                </a>
            }
        </div>
        @Html.Partial("_Pagination", Model.Pagination)
    </div>
</div>

<style>
    .col-20-percent {
        width: 20%;
        float: left;
        position: relative;
        min-height: 1px;
        padding-right: 15px;
        padding-left: 15px;
        padding-bottom: 20px;
        transition: all 1s ease-in-out;
        -moz-transition: all 1s ease-in-out;
        -webkit-transition: all 1s;
    }

        .col-20-percent:hover {
            background-color: #d9edf7;
        }
</style>

@section Scripts {
    <script>
        $('form').on('submit', function (e) {
            e.preventDefault()

            var formValues = $(this.elements).map(function () {
                var obj = $(this);
                if (obj.attr('type') == 'submit') {
                    return;
                }
                if (obj.attr('multiple')) {
                    return `${obj.attr('name')}=${obj.val().join(',')}`;
                }
                if (obj.val()) {
                    return `${obj.attr('name')}=${obj.val()}`;
                }
            }).get();

            window.location = $(this).attr('action') + '?' + formValues.join('&');
        })
    </script>
}