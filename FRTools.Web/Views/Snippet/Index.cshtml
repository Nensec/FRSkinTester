@model Dictionary<string, BaseScriptModel>

@{
    ViewBag.Title = "Code snippets";
    
}

<div class="row">
    <div class="col-md-4">
        <div class="card mt-3">
            <div class="card-header" style="cursor:pointer;" data-toggle="collapse" data-target=".snippets">
                Available snippets
            </div>
            <div class="card-body py-0">
                <div class="snippets collapse show">
                    <div class="pb-3">
                        @foreach (var script in Model.Values)
                        {
                            <a href="#@(script.SanitizedName)" class="module">
                                <div class="card mt-3" style="margin-bottom:0">
                                    <div class="card-body">
                                        <div class="moduleIcon d-none d-xl-block">
                                            @if (string.IsNullOrEmpty(script.IconBase64))
                                            {
                                                <span>@(script.Name[0])</span>
                                            }
                                            else
                                            {
                                                <img src="@($"data:image/png;base64, {script.IconBase64}")" />
                                            }
                                        </div>
                                        <div class="moduleDescription">
                                            <h5>@(script.Name)</h5>
                                            @(script.Description)
                                        </div>
                                    </div>
                                </div>
                            </a>
                        }
                    </div>
                </div>
                <div class="snippets collapse">
                    <div class="py-3">
                        Snippets are hidden, click the header to view them again
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col col-md-8">
        <div class="card mt-3">
            <div class="card-body">
                <div class="selectModuleHelp">
                    <h5>What are snippets?</h5>
                    <p>Code snippets, or just snippets, are simple scripts that are often simply transformative in nature. Meaning, it just changes a URL to a slightly different one for example. Or just shows you information based on a given input.</p>
                    <p>To begin, select a snippet on the left.</p>
                </div>

                @foreach (var model in Model)
                {
                    var script = model.Value;
                    <div module="@(script.SanitizedName)" class="moduleHelp" style="display:none;">
                        @if (!string.IsNullOrEmpty(script.IconBase64))
                        {
                            <img style="width:128px;height:128px; margin-right:15px" class="pull-left" src="@($"data:image/png;base64, {script.IconBase64}")" />
                        }
                        <h5>@(script.Name)</h5>
                        <p>@(script.Description)</p>
                        <hr />
                        @Html.Partial(model.Key, model.Value)
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<style>
    .module .panel {
        margin-top: 15px;
    }

    .module:first-of-type .panel {
        margin: 0;
    }

    .moduleIcon {
        border-radius: 32px;
        width: 64px;
        height: 64px;
        text-align: center;
        background-color: #ddd;
        float: left;
        color: white;
    }

        .moduleIcon img {
            width: 64px;
            height: 64px;
        }

        .moduleIcon span {
            display: block;
            font-size: 24px;
            margin-top: 15px;
            font-family: 'Arimo', sans-serif;
        }

    [data-theme="dark"] .moduleIcon {
        background-color: #555;
    }

    .moduleDescription {
        display: table-cell;
        padding-left: 15px;
    }
</style>

@section head {
    <script>
        const snippetInitializations = new Array();
        const snippetActivation = {};
        const snippetDeactivation = {};
        const validUrlRegex = new RegExp(/(http[s]?:\/\/www1.flightrising.com\/rendern\/350\/\d*\/(\d)*_350.png)(\\?mtime=[a-zA-Z]*)?/);
    </script>
}

@section scripts {
    <script>
        let activeModule;

        $(() => {
            $('.module').on('mouseover', () => {
                $('.moduleIcon', this).css('border-radius', 20);
            }).on('mouseout', () => {
                $('.moduleIcon', this).css('border-radius', 32);
            });

            if (window.location.hash.length) {
                console.log(window.location.hash);
                selectModule(window.location.hash.substr(1));
            }

            window.onhashchange = () => {
                let hash = window.location.hash.substr(1);
                if (activeModule !== hash) {
                    selectModule(hash);
                }
            }

            snippetInitializations.forEach(v => v());
            $('.moduleHelp').on()
        });

        selectModule = module => {
            $('.moduleHelp, .selectModuleHelp').filter(':visible').hide({
                complete: () => activeModule && snippetDeactivation[activeModule]?.()
            });
            $(`.moduleHelp[module="${module}"]`).show({
                complete: () => {
                    snippetActivation[`${module}`]?.();
                    activeModule = module;
                }
            });
        }

        saveProfileSetting = (key, value) => {
            var statusElm = $(`#${key}_status`);
            statusElm.removeClass('success danger').toggleClass('warning').html('Saving..');
            $.post({
                url: '@Url.RouteUrl("SaveProfileSetting")',
                data: {
                    key: key,
                    value: value
                }
            }).done(function (data) { statusElm.toggleClass('warning').toggleClass('success').html('Saved!'); })
                .fail(function (data) { statusElm.toggleClass('warning').toggleClass('danger').html('Error!'); });
        }

        resetSaveButton = key => $(`#${key}_status`).removeClass('warning danger success').toggleClass('success').html('Save');
    </script>
}