@model FRTools.Web.Models.PinglistListsViewModel

@{
    ViewBag.Title = "View pinglist";
}

<div class="panel panel-default">
    <div class="panel-heading">
        <h4>View pinglist</h4>
    </div>
    <div class="panel-body">
        <p>
            Use the fields here to navigate to a a pinglist that you have the ID for.<br />
            If you created a pinglist without being logged in, you will need to enter your secret key if you wish to manage your list.
        </p>
        <div class="form-horizontal">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.ListId, new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.ListId, new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.SecretKey, new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.TextBoxFor(model => model.SecretKey, new { @class = "form-control", placeholder = "Optional", data_placement = "right", data_toggle = "tooltip", title = "You only need this if you own this pinglist, and want to manage it." })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-4 col-md-8">
                        <input type="submit" value="Go to pinglist" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@if (Request.IsAuthenticated)
{
    <div class="panel panel-default">
        <div class="panel-heading">
            <h4>
                Your pinglists
                <span style="margin-top:-5px;" class="pull-right"><a class="btn btn-primary btn-sm" href="@Url.RouteUrl("PinglistCreate")">Create pinglist</a></span>
            </h4>
        </div>

        <div class="panel-body">

            <div class="col-md-6">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        Pinglists with your entry
                    </div>
                    <div class="panel-body">
                        @if (Model.HasVerified)
                        {
                            if (Model.OnLists.Any())
                            {
                                <ul class="listContainer" id="onListContainer" tabindex="0" role="listbox">
                                    @foreach (var list in Model.OnLists)
                                    {
                                        <li>@(list.Name) (Owner: @Html.Raw(list.Owner?.UserName ?? "<i>Anonymous</i>")) <span class="pull-right"><a class="btn btn-primary btn-xs" href="@Url.RouteUrl("PinglistDirect", new { listId = list.ListId })">View</a></span></li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <i>You are not on any pinglists :(</i>
                            }
                        }
                        else
                        {
                            <p><i>To see on what pinglists you are, link your Flight Rising account to your FRTools account. You can do so <a href="@Url.RouteUrl("VerifyFR")">here</a></i></p>
                        }
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        Owned pinglists
                        <span class="pull-right">
                            <a class="btn btn-success btn-xs" href="#" onclick="AddCategory()">Add category</a>
                        </span>
                    </div>

                    <div class="panel-body">
                        @if (Model.OwnedLists.Any())
                        {
                            <ul class="listContainer" id="ownedListContainer" tabindex="0" role="listbox">
                                @foreach (var list in Model.OwnedLists.Where(x => x.PinglistCategory == null))
                                {
                                    <li>@(list.Name)<span class="pull-right"><a class="btn btn-primary btn-xs" href="@Url.RouteUrl("PinglistDirect", new { listId = list.ListId })">Manage</a></span></li>
                                }
                                <li><hr style="margin:10px 0" /></li>
                                @foreach (var category in Model.AvailableCategories)
                                {
                                    <li>
                                        @if (Model.OwnedLists.Any(x => x.PinglistCategory?.Id == category.Id))
                                        {
                                            <span class="category-caret category-caret-down">@(category.Name)</span>
                                        }
                                        else
                                        {
                                            <span class="category-caret">@(category.Name) <i>(Empty Category)</i></span>
                                        }
                                        <span class="pull-right">
                                            <a class="btn btn-warning btn-xs" href="#" onclick="EditCategory(@(category.Id))">Edit</a>
                                            <a class="btn btn-danger btn-xs" href="#" onclick="DeleteCategory(@(category.Id))">Delete</a>
                                        </span>
                                        <ul class="nested active">
                                            @foreach (var list in Model.OwnedLists.Where(x => x.PinglistCategory?.Id == category.Id))
                                            {
                                                <li>@(list.Name)<span class="pull-right"><a class="btn btn-primary btn-xs" href="@Url.RouteUrl("PinglistDirect", new { listId = list.ListId })">Manage</a></span></li>
                                            }
                                        </ul>
                                    </li>

                                }
                            </ul>
                        }
                        else
                        {
                            <i>You do not own any pinglists :(</i>
                        }
                    </div>
                </div>
            </div>

        </div>
    </div>
}

<script>
    $(document).ready(function () {
        $('input[type="submit"]').click(function () {
            var listId = $('#ListId').val();
            var secretKey = $('#SecretKey').val();
            if (listId) {
                location.href = `${location.protocol}//${location.host}${location.pathname}/${listId}${(secretKey ? '?secretKey=' + secretKey : '')}`;
            }
        });

        AddCategory = function () {
            var name = prompt('Enter name for new category');
            if (name) {
                $.post('@(Url.RouteUrl("PinglistCategoryAdd"))', { name: name }).done(function (data) {
                    window.location.reload(true);
                });
            }
        }

        EditCategory = function (id) {
            var name = prompt('Enter new name');
            if (name) {
                $.post('@(Url.RouteUrl("PinglistCategoryEdit"))', { id: id, name: name }).done(function (data) {
                    window.location.reload(true);
                });
            }
        }

        DeleteCategory = function (id) {
            if (confirm("This will delete the category, but not the pinglists in it. They will be moved out and be without a category. This action cannot be undone, are you sure?")) {
                $.post('@(Url.RouteUrl("PinglistCategoryDelete"))', { id: id }).done(function (data) {
                    window.location.reload(true);
                });
            }
        }

        var carets = document.getElementsByClassName("category-caret");

        for (var i = 0; i < carets.length; i++) {
            carets[i].addEventListener("click", function () {
                this.parentElement.querySelector(".nested").classList.toggle("active");
                this.classList.toggle("category-caret-down");
            });
        }
    });
</script>


<style>
    .listContainer {
        padding: 0;
        margin: 0;
        height: 100%;
        max-height: 450px;
        min-height: 219px;
        overflow-y: auto;
    }

        .listContainer:focus {
            outline: none;
        }

        .listContainer li {
            display: block;
            line-height: 2.5em;
            padding: 0 5px;
        }

            .listContainer li[aria-selected="true"] {
                background: #d9edf7;
            }

        .listContainer ul.nested {
            display: none;
            padding-left: 25px;
            margin-right: -5px;
        }

        .listContainer ul.active {
            display: block;
        }

    /* Style the caret/arrow */
    .category-caret {
        cursor: pointer;
        user-select: none; /* Prevent text selection */
    }

        /* Create the caret/arrow with a unicode, and style it */
        .category-caret::before {
            content: "\25B6";
            color: black;
            display: inline-block;
            margin-right: 6px;
        }

    .category-caret-down::before {
        transform: rotate(90deg);
    }
</style>