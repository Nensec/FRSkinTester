@model FRTools.Models.UserPostViewModel

@{
    ViewBag.Title = "Manage account";
}

<div class="panel panel-default">
    <div class="panel-heading">
        <h2>
            Manage your account
        </h2>
    </div>
    <div class="panel-body">
        @using (Html.BeginRouteForm("ManageUserPost"))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Privacy, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <select class="form-control" id="@Html.IdFor(model => model.Privacy)" name="@Html.NameFor(model => model.Privacy)">
                                @foreach (var privacy in Enum.GetValues(typeof(Privacy)).Cast<Privacy>())
                                {
                                    <option value="@((int)privacy)" @(Model.Privacy == privacy ? "selected" : "")>@(privacy.GetDescription())</option>
                                }
                            </select>
                            @Html.ValidationMessageFor(model => model.Privacy, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.DefaultVisibility, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <select class="form-control" id="@Html.IdFor(model => model.DefaultVisibility)" name="@Html.NameFor(model => model.DefaultVisibility)" data-toggle="tooltip" title="Changing this will not affect existing skins' visibility!">
                                @foreach (var visibility in Enum.GetValues(typeof(SkinVisiblity)).Cast<SkinVisiblity>())
                                {
                                    <option value="@((int)visibility)" @(Model.DefaultVisibility == visibility ? "selected" : "")>@(visibility.GetDescription())</option>
                                }
                            </select>
                            @Html.ValidationMessageFor(model => model.DefaultVisibility, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-4 col-md-8">
                            <input type="submit" value="Save changes" class="btn btn-primary" />
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section scripts {
    <script>
        $(function () {
            $('[data-toggle="tooltip"]').tooltip();
        })
    </script>
}