@model FRSkinTester.Models.ManageModelPost

@using (Html.BeginRouteForm("ManagePost"))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.SkinId)
    @Html.HiddenFor(model => model.SecretKey)

    <div class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.TextBoxFor(model => model.Title, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.TextAreaFor(model => model.Description, htmlAttributes: new { @class = "form-control", rows = 3 })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DragonType, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                <select class="form-control" name="@(Html.NameFor(model => model.DragonType))" id="@(Html.IdFor(model => model.DragonType))">
                    @foreach (var dragonType in Enum.GetValues(typeof(FRSkinTester.Models.DragonType)).Cast<FRSkinTester.Models.DragonType>().OrderBy(x => x.ToString()))
                    {
                        <option @((dragonType == Model.DragonType ? "selected" : "")) value="@((int)dragonType)">@(dragonType.ToString())</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                <select class="form-control" name="@(Html.NameFor(model => model.Gender))" id="@(Html.IdFor(model => model.Gender))">
                    @foreach (var gender in Enum.GetValues(typeof(FRSkinTester.Models.Gender)).Cast<FRSkinTester.Models.Gender>().OrderBy(x => x.ToString()))
                    {
                        <option @((gender == Model.Gender ? "selected" : "")) value="@((int)gender)">@(gender.ToString())</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Visibility, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                <select class="form-control" id="@Html.IdFor(model => model.Visibility)" name="@Html.NameFor(model => model.Visibility)" data-toggle="popover" data-content="Hiding from browse still makes the skin visible on your profile<br/>Hiding everywhere requires the share link to be used to preview your skin">
                    @foreach (var visibility in Enum.GetValues(typeof(SkinVisiblity)).Cast<SkinVisiblity>())
                    {
                        <option value="@((int)visibility)" @(Model.Visibility == visibility ? "selected" : "")>@(visibility.GetDescription())</option>
                    }
                </select>
                @Html.ValidationMessageFor(model => model.Visibility, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-4 col-md-8">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}