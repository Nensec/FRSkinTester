@model FRSkinTester.Models.UploadModelPost

@{
    ViewBag.Title = "Upload";
}

<div class="panel panel-default">
    <div class="panel-heading">
        <h2>Upload your skin</h2>
    </div>
    <div class="panel-body" style="min-height:370px">

        @using (Html.BeginRouteForm("UploadPost", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal col-md-12">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.Title, htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextAreaFor(model => model.Description, htmlAttributes: new { @class = "form-control", rows = 3 })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DragonType, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <select class="form-control" name="@(Html.NameFor(model => model.DragonType))" id="@(Html.IdFor(model => model.DragonType))">
                                <option value="14">Bogsneak</option>
                                <option value="12">Coatl</option>
                                <option value="1">Fae</option>
                                <option value="2">Guardian</option>
                                <option value="8">Imperial</option>
                                <option value="3">Mirror</option>
                                <option value="11">Nocturne</option>
                                <option value="4">Pearlcatcher</option>
                                <option value="5">Ridgeback</option>
                                <option value="13">Skydancer</option>
                                <option value="9">Snapper</option>
                                <option value="7">Spiral</option>
                                <option value="6">Tundra</option>
                                <option value="10">Wildclaw</option>
                            </select>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <select class="form-control" name="@(Html.NameFor(model => model.Gender))" id="@(Html.IdFor(model => model.Gender))">
                                <option value="0">Male</option>
                                <option value="1">Female</option>
                            </select>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Skin, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            <span class="control-fileupload">
                                <label for="file" class="text-left">Please choose a file on your computer.</label>
                                <input type="file" accept=".png" name="@(Html.NameFor(model => model.Skin))" id="@(Html.IdFor(model => model.Skin))" />
                            </span>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-4 col-md-8">
                            <input type="submit" value="Upload Skin" class="btn btn-primary" />
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="panel panel-default">
                        <div class="panel-body">
                            <div class="center-block" style="width:350px;height:350px;">
                                <img id="Dummy" style="z-index:1;position:absolute;" src="@Url.Action("GetDummyDragon")?dragonType=14&gender=0" />
                                <img id="Preview" style="z-index:2;position:absolute;display:none;" />
                            </div>
                            <div id="CoverageContainer" style="display:none;">
                                <p class="text-center">
                                    Coverage: <b><span id="Coverage"></span>%</b>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script>
    $('#@(Html.IdFor(model => model.DragonType)), #@(Html.IdFor(model => model.Gender))').change(function () {
        var dragonType = $('#@(Html.IdFor(model => model.DragonType))').val();
        var gender = $('#@(Html.IdFor(model => model.Gender))').val();

        $('#Dummy').show().attr('src', `@Url.Action("GetDummyDragon")?dragonType=${dragonType}&gender=${gender}`);
        var dragonImage = new Image();
        dragonImage.onload = function () {
            updateCoverage(undefined, dragonImage);
        };
        dragonImage.src = $('#Dummy').attr('src');
    });

    $('#@(Html.IdFor(model => model.Skin))').change(function () {
        var t = $(this).val();
        var labelText = 'File : ' + t.substr(12, t.length);
        $(this).prev('label').text(labelText);
        var file = this.files[0];
        var reader = new FileReader();

        reader.onload = function (e) {
            if (file && file.type === 'image/png') {
                var skinImage = new Image();
                skinImage.onload = function () {
                    $('#Preview').show().attr('src', e.target.result);
                    updateCoverage(skinImage);
                };
                skinImage.src = e.target.result;
            }
            else {
                $('#Preview').hide();
            }
        };

        reader.readAsDataURL(file);
    });

    var skinImg, dragonImg;

    $('document').ready(function () {
        dragonImg = new Image();
        dragonImg.src = $('#Dummy').attr('src');
    });

    updateCoverage = function (skinImage, dragonImage) {
        if (dragonImage === undefined) {
            dragonImage = dragonImg;
        } else {
            dragonImg = dragonImage;
        }

        var dragonContext = $('#dragon')[0].getContext('2d');
        dragonContext.clearRect(0, 0, 350, 350);
        dragonContext.drawImage(dragonImage, 0, 0, 350, 350, 0, 0, 350, 350);

        if (!$('#Preview').is(':visible')) {
            $('#CoverageContainer').hide();
            return;
        }

        if (skinImage === undefined) {
            skinImage = skinImg;
        } else {
            skinImg = skinImage;
        }

        var skinContext = $('#skin')[0].getContext('2d');
        skinContext.clearRect(0, 0, 350, 350);
        skinContext.drawImage(skinImage, 0, 0, 350, 350);

        var alphaSum = 0;
        var pixelCount = 0;

        var skinData = skinContext.getImageData(0, 0, 350, 350).data;
        var dragonData = dragonContext.getImageData(0, 0, 350, 350).data;

        for (var i = 0, n = skinData.length; i < n; i += 4) {
            if (dragonData[i + 3] > 95) {
                alphaSum += skinData[i + 3];
                pixelCount++;
            }
        }

        var coverage = (alphaSum / pixelCount / 255 * 100).toFixed(2);
        $('#CoverageContainer').show().find('#Coverage').html(coverage);
    };
</script>

<canvas width="350" height="350" id="skin" style="display:none;"></canvas>
<canvas width="350" height="350" id="dragon" style="display:none;"></canvas>